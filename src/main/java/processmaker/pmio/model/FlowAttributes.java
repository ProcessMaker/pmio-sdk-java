/**
 * ProcessMaker API
 * This ProcessMaker I/O API provides access to a BPMN 2.0 compliant workflow engine api that is designed to be used as a microservice to support enterprise cloud applications.  The current Alpha 1.0 version supports most of the descriptive class of the BPMN 2.0 specification.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@processmaker.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package processmaker.pmio.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * FlowAttributes
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-06-01T11:35:23.537+03:00")
public class FlowAttributes   {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("process_id")
  private String processId = null;

  @SerializedName("from_object_id")
  private String fromObjectId = null;

  @SerializedName("from_object_type")
  private String fromObjectType = null;

  @SerializedName("to_object_id")
  private String toObjectId = null;

  @SerializedName("to_object_type")
  private String toObjectType = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    @SerializedName("SEQUENTIAL")
    SEQUENTIAL("SEQUENTIAL"),
    
    @SerializedName("EVALUATE")
    EVALUATE("EVALUATE"),
    
    @SerializedName("SELECT")
    SELECT("SELECT"),
    
    @SerializedName("PARALLEL")
    PARALLEL("PARALLEL"),
    
    @SerializedName("PARALLEL-BY-EVALUATION")
    PARALLEL_BY_EVALUATION("PARALLEL-BY-EVALUATION"),
    
    @SerializedName("SEC-JOIN")
    SEC_JOIN("SEC-JOIN"),
    
    @SerializedName("DISCRIMINATOR")
    DISCRIMINATOR("DISCRIMINATOR");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = TypeEnum.SEQUENTIAL;

  @SerializedName("condition")
  private String condition = null;

  @SerializedName("default")
  private Boolean _default = false;

  @SerializedName("optional")
  private Boolean optional = false;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  public FlowAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "Flow name", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FlowAttributes description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "Some description", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FlowAttributes processId(String processId) {
    this.processId = processId;
    return this;
  }

   /**
   * Get processId
   * @return processId
  **/
  @ApiModelProperty(example = "9d705617-cc29-482a-85ff-7f7292f72b11", required = true, value = "")
  public String getProcessId() {
    return processId;
  }

  public void setProcessId(String processId) {
    this.processId = processId;
  }

  public FlowAttributes fromObjectId(String fromObjectId) {
    this.fromObjectId = fromObjectId;
    return this;
  }

   /**
   * Get fromObjectId
   * @return fromObjectId
  **/
  @ApiModelProperty(example = "9d705617-cc29-482a-85ff-7f7292f72b25", required = true, value = "")
  public String getFromObjectId() {
    return fromObjectId;
  }

  public void setFromObjectId(String fromObjectId) {
    this.fromObjectId = fromObjectId;
  }

  public FlowAttributes fromObjectType(String fromObjectType) {
    this.fromObjectType = fromObjectType;
    return this;
  }

   /**
   * Get fromObjectType
   * @return fromObjectType
  **/
  @ApiModelProperty(example = "task", required = true, value = "")
  public String getFromObjectType() {
    return fromObjectType;
  }

  public void setFromObjectType(String fromObjectType) {
    this.fromObjectType = fromObjectType;
  }

  public FlowAttributes toObjectId(String toObjectId) {
    this.toObjectId = toObjectId;
    return this;
  }

   /**
   * Get toObjectId
   * @return toObjectId
  **/
  @ApiModelProperty(example = "9d705617-cc29-482a-85ff-7f7292f72b25", required = true, value = "")
  public String getToObjectId() {
    return toObjectId;
  }

  public void setToObjectId(String toObjectId) {
    this.toObjectId = toObjectId;
  }

  public FlowAttributes toObjectType(String toObjectType) {
    this.toObjectType = toObjectType;
    return this;
  }

   /**
   * Get toObjectType
   * @return toObjectType
  **/
  @ApiModelProperty(example = "event", required = true, value = "")
  public String getToObjectType() {
    return toObjectType;
  }

  public void setToObjectType(String toObjectType) {
    this.toObjectType = toObjectType;
  }

  public FlowAttributes type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public FlowAttributes condition(String condition) {
    this.condition = condition;
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }

  public FlowAttributes _default(Boolean _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Boolean getDefault() {
    return _default;
  }

  public void setDefault(Boolean _default) {
    this._default = _default;
  }

  public FlowAttributes optional(Boolean optional) {
    this.optional = optional;
    return this;
  }

   /**
   * Get optional
   * @return optional
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Boolean getOptional() {
    return optional;
  }

  public void setOptional(Boolean optional) {
    this.optional = optional;
  }

  public FlowAttributes createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(example = "2017-01-01T00:00:00+00:00", value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public FlowAttributes updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(example = "2017-01-01T00:00:00+00:00", value = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowAttributes flowAttributes = (FlowAttributes) o;
    return Objects.equals(this.name, flowAttributes.name) &&
        Objects.equals(this.description, flowAttributes.description) &&
        Objects.equals(this.processId, flowAttributes.processId) &&
        Objects.equals(this.fromObjectId, flowAttributes.fromObjectId) &&
        Objects.equals(this.fromObjectType, flowAttributes.fromObjectType) &&
        Objects.equals(this.toObjectId, flowAttributes.toObjectId) &&
        Objects.equals(this.toObjectType, flowAttributes.toObjectType) &&
        Objects.equals(this.type, flowAttributes.type) &&
        Objects.equals(this.condition, flowAttributes.condition) &&
        Objects.equals(this._default, flowAttributes._default) &&
        Objects.equals(this.optional, flowAttributes.optional) &&
        Objects.equals(this.createdAt, flowAttributes.createdAt) &&
        Objects.equals(this.updatedAt, flowAttributes.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, processId, fromObjectId, fromObjectType, toObjectId, toObjectType, type, condition, _default, optional, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowAttributes {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    processId: ").append(toIndentedString(processId)).append("\n");
    sb.append("    fromObjectId: ").append(toIndentedString(fromObjectId)).append("\n");
    sb.append("    fromObjectType: ").append(toIndentedString(fromObjectType)).append("\n");
    sb.append("    toObjectId: ").append(toIndentedString(toObjectId)).append("\n");
    sb.append("    toObjectType: ").append(toIndentedString(toObjectType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    optional: ").append(toIndentedString(optional)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

